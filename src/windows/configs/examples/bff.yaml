##############################################################################
#
# This file specifies the options that BFF will use to fuzz
#   Comments are specified by the "#" character
#
##############################################################################
# FUZZ CAMPAIGN SETTINGS
#
# id:
# used for identifying campaign, placement of results
#
# keep_heisenbugs:
# Keep crashing testcases detected by the Windows XP hook, but not when run
# via the debugger. This option is ignored on non-XP platforms.
#
# use_buttonclicker:
# Spawn program to click buttons
##############################################################################
campaign:
    id: convert v5.5.7
    keep_heisenbugs: False
    use_buttonclicker: False


##############################################################################
# Fuzz target options:
#
# program:
# Path to fuzzing target executable
#
# cmdline_template:
# Used to specify the command-line invocation of the target
#
# copyfuzzedto:
# Certain target applications will read input files from a fixed
# location. Set this option to copy a fuzzed file to a static location
# before invoking the target application.
#
# postprocessfuzzed:
# Set this option if you wish to run a program to post-process a file
# after it has been fuzzed. This option must be used in conjunction
# with the "copyfuzzedto" option, so that a static location is used
# for the fuzzed file.
##############################################################################
target:
    program: C:\BFF\imagemagick\convert.exe
    cmdline_template: $PROGRAM $SEEDFILE NUL
    #copyfuzzedto: C:\BFF\fuzzedfile
    #postprocessfuzzed: C:\BFF\postprocess.exe C:\BFF\fuzzedfile

    # With the default ImageMagick fuzz run, the above target options
    # will result in the following invocation of ImageMagick:
    # C:\BFF\imagemagick\convert.exe <SEEDFILE> NUL
    # This exercises ImageMagick's image decoding, while also outputting
    # to the Windows NUL device, minimizing I/O.
    # When choosing a fuzzing target, modify the cmdline_template line to
    # reflect how that target needs to be invoked.
    #
    # NOTE:
    # If your target application doesn't use any parameters after the
    # file name, you will probably just use:
    # cmdline_template: $PROGRAM $SEEDFILE
    #
    # NOTE: BFF uses python's shlex.split() method to parse the command
    # line template after substituting in the program and seedfile values.
    # For this reason, it is required that if any other items in the
    # cmdline_template involve windows paths, you need either use
    # forward slashes or double quotes. For example:
    # cmdline_template: $PROGRAM -in $SEEDFILE -out c:/some/path/to/file
    # cmdline_template: $PROGRAM -in $SEEDFILE -out "c:\some path\to file"


##############################################################################
# Directories used by BFF (all relative to bff.py)
#
# seedfile_dir:
# Location of seed files
#
# working_dir:
# Temporary directory used by BFF. Use a ramdisk to reduce disk activity
#
# results_dir:
# Location of fuzzing results
##############################################################################
directories:
    seedfile_dir: seedfiles\examples
    working_dir:  fuzzdir
    results_dir:  results


##############################################################################
# Runner options
#
# hideoutput:
# Hide stdout of target application
#
# runtimeout:
# Number of seconds to allow target application to execute
#
# watchcpu:
# Kill target process when its CPU usage drops towards zero
# (Auto, True, False)
#
##############################################################################
runner:
    hideoutput: False
    runtimeout: 5
    watchcpu: Auto


##############################################################################
# Debugger options
#
# debugheap:
# Use the debug heap for the target application
#
# max_handled_exceptions:
# Maximum number of times to continue exceptions
#
##############################################################################
debugger:
    debugheap: False
    max_handled_exceptions: 6


##############################################################################
# Fuzz run options
#
# first_iteration:
# The iteration number to begin with. Defaults to zero if not present.
#
# seed_interval:
# The number of iterations to perform before selecting a new seed file and
# mutation range. Default is 1 if not present.
#
# minimize:
# True: Create a file that is minimally-different than the seed file, yet crashes
# with the same hash
# string: Create a file that is mostly 'x' (0x78) characters, yet crashes with
# the same hash
# False: Don't minimize
#
# minimizer_timeout:
# The maximum amount of time that BFF will spend on a minimization run before
# giving up
#
# keep_unique_faddr:
# Consider the Exception Faulting Address value as part of the crash hash
#
# keep_duplicates:
# Keep all duplicate crashing cases
#
# recycle_crashers:
# Recycle uniquely-crashing testcases into the pool of available seed files
# to fuzz
##############################################################################
runoptions:
    first_iteration: 0
    seed_interval: 5
    minimize: True
    minimizer_timeout: 3600
    keep_unique_faddr: False
    keep_duplicates: False
    recycle_crashers: False


##############################################################################
# FUZZER OPTIONS
#
# ** Note that only one fuzzer can be selected per campaign **
#
# bytemut:
# replace bytes with random values
#
# swap:
# swap adjacent bytes
#
# wave:
# cycle through every possible single-byte value, sequentially
#
# drop:
# removes one byte from the file for each position in the file
#
# insert:
# inserts a random byte for each position in the file
#
# truncate:
# truncates bytes from the end of the file
#
# crmut:
# replace carriage return bytes with random values
#
# crlfmut:
# replace carriage return and linefeed bytes with random values
#
# nullmut:
# replace null bytes with random values
#
# verify:
# do not mutate file. Used for verifying crashing testcases
#
# OPTIONS APPLIED TO THE ABOVE MUTATORS:
#
# fuzz_zip_container:
# rather than fuzzing zip file contents, fuzz the zip container itself
#
##############################################################################
fuzzer:
    fuzzer: bytemut
    # fuzzer: swap
    # fuzzer: wave
    # fuzzer: drop
    # fuzzer: insert
    # fuzzer: truncate
    # fuzzer: crmut
    # fuzzer: crlfmut
    # fuzzer: nullmut
    # fuzzer: verify
    fuzz_zip_container: False
